{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api.js","App.jsx","index.js"],"names":["TodoList","todos","selectUser","filterByTitle","filterByCompleted","className","type","onChange","event","target","value","map","todo","completed","key","id","checked","readOnly","title","onClick","userId","CurrentUser","name","email","phone","onClear","defaultProps","getTodos","fetch","then","response","json","getUser","App","state","preparedTodos","selectedUserId","user","componentDidMount","setState","data","filter","componentDidUpdate","query","includes","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4747c4e.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\n\nexport const TodoList = ({\n  todos,\n  selectUser,\n  filterByTitle,\n  filterByCompleted,\n}) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <input\n        type=\"text\"\n        onChange={event => filterByTitle(event.target.value)}\n      />\n      <select onChange={filterByCompleted}>\n        <option value=\"all\">\n          All\n        </option>\n        <option value=\"active\">\n          Active\n        </option>\n        <option value=\"completed\">\n          Completed\n        </option>\n      </select>\n      <ul className=\"TodoList__list\">\n        {todos\n          .map(todo => (\n            <li\n              className={todo.completed\n                ? 'TodoList__item TodoList__item--checked'\n                : 'TodoList__item TodoList__item--unchecked'\n              }\n              key={todo.id}\n            >\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  readOnly\n                />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                className=\"\n                  TodoList__user-button\n                  button\n                \"\n                type=\"button\"\n                onClick={() => selectUser(todo.userId)}\n              >\n                User&nbsp;#\n                {todo.userId}\n              </button>\n            </li>\n          ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectUser: PropTypes.func.isRequired,\n  filterByTitle: PropTypes.func.isRequired,\n  filterByCompleted: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\n\nexport const CurrentUser = ({ id, name, email, phone, onClear }) => (\n  <div className=\"CurrentUser\">\n    <h2 className=\"CurrentUser__title\">\n      <span>\n        Selected user:\n        {id}\n      </span>\n    </h2>\n\n    <h3 className=\"CurrentUser__name\">{name}</h3>\n    <p className=\"CurrentUser__email\">{email}</p>\n    <p className=\"CurrentUser__phone\">{phone}</p>\n    <button\n      type=\"button\"\n      onClick={onClear}\n    >\n      Clear\n    </button>\n  </div>\n);\n\nCurrentUser.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  email: PropTypes.string,\n  phone: PropTypes.string,\n  onClear: PropTypes.func.isRequired,\n};\n\nCurrentUser.defaultProps = {\n  id: 0,\n  name: '',\n  email: '',\n  phone: '',\n};\n","const API_TODOS_URL = `https://mate-api.herokuapp.com/todos`;\nconst API_USERS_URL = `https://mate-api.herokuapp.com/users`;\n\nexport const getTodos = () => (\n  fetch(API_TODOS_URL)\n    .then(response => response.json())\n);\n\nexport const getUser = userId => fetch(`${API_USERS_URL}/${userId}`)\n  .then(response => response.json());\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos, getUser } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    preparedTodos: [],\n    selectedUserId: 0,\n    user: [],\n  };\n\n  componentDidMount = () => {\n    getTodos()\n      .then(todos => (\n        this.setState({\n          todos: todos.data\n            .filter(todo => todo.userId),\n          preparedTodos: todos.data\n            .filter(todo => todo.userId),\n        })\n      ));\n  }\n\n  componentDidUpdate = () => {\n    if (this.state.selectedUserId !== 0\n      && this.state.selectedUserId !== this.state.user.id\n      && this.state.selectedUserId) {\n      getUser(this.state.selectedUserId)\n        .then((user) => {\n          if (user.data !== null) {\n            this.setState({ user: user.data });\n          } else {\n            this.setState(state => ({ user: {\n              id: state.selectedUserId,\n              name: 'No name',\n              email: 'No email',\n              phone: 'No phone',\n            } }));\n          }\n        });\n    }\n  }\n\n  selectUser = (id) => {\n    this.setState({ selectedUserId: id });\n  }\n\n  onClear = () => {\n    this.setState({\n      user: [],\n      selectedUserId: 0,\n    });\n  }\n\n  filterByTitle = (query) => {\n    this.setState(state => ({\n      preparedTodos: [...state.todos].filter(todo => (todo.title\n        ? todo.title.includes(query)\n        : '')),\n    }));\n  }\n\n  filterByCompleted = (event) => {\n    if (event.target.value === 'completed') {\n      this.setState(state => ({\n        preparedTodos: [...state.todos].filter(todo => todo.completed),\n      }));\n    } else if (event.target.value === 'active') {\n      this.setState(state => ({\n        preparedTodos: [...state.todos].filter(todo => !todo.completed),\n      }));\n    } else {\n      this.setState(state => ({\n        preparedTodos: [...state.todos],\n      }));\n    }\n  }\n\n  render() {\n    const { preparedTodos, selectedUserId, user } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={preparedTodos}\n            selectUser={this.selectUser}\n            filterByTitle={this.filterByTitle}\n            filterByCompleted={this.filterByCompleted}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId && user ? (\n              <CurrentUser\n                onClear={this.onClear}\n                {...user}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}